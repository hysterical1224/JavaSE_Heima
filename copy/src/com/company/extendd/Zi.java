package com.company.extendd;

// Java中类只支持单继承，不支持多继承
//Java中类支持多层继承
public class Zi extends Fu{
    //    继承可以让类与类之间产生关系，子父类关系，产生子父类后，子类则可以使用父类中非私有的成员。
    //    提高了代码的复用性(多个类相同的成员可以放到同一个类中)
    //提高了代码的维护性(如果方法的代码需要修改，修改一处即可)
    //继承弊端
    //继承让类与类之间产生了关系，类的耦合性增强了，当父类发生变化时子类实现也不得不跟着变化，削
    //弱了子类的独立性
    //继承的应用场景：
    //使用继承，需要考虑类与类之间是否存在is..a的关系，不能盲目使用继承
    //is..a的关系：谁是谁的一种，例如：老师和学生是人的一种，那人就是父类，学生和老师就是子类

    int num = 20;
    public void method(){
        System.out.println(this.getClass()+"的method方法被调用！");

    }

//    当子类需要父类的功能，而功能主体子类有自己特有内容时，可以重写父类中的方法，这样，即沿袭了
//父类的功能，又定义了子类特有的内容。Override注解用来检测当前的方法，是否是重写的方法，起到【校验】的作用
/* 编译【通过】，子类重写父类方法的时候，访问权限需要大于等于父类 */
    @Override
    public void show() {
//        1. 私有方法不能被重写(父类私有成员子类是不能继承的)
        //2. 子类方法访问权限不能更低(public > 默认 > 私有)
//        super.show();
        System.out.println(super.num);
    }
}
