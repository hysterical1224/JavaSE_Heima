package jihe14_15;

public class haxi {
    /*
    * 哈希值简介
是JDK根据对象的地址或者字符串或者数字算出来的int类型的数值
如何获取哈希值
Object类中的public int hashCode()：返回对象的哈希码值
哈希值的特点
同一个对象多次调用hashCode()方法返回的哈希值是相同的
默认情况下，不同对象的哈希值是不同的。而重写hashCode()方法，可以实现让不同对象的哈希值相同
    *
    *
    * 重写 hashCode() 的目的是为了保证对象在使用基于哈希表的数据结构时能够正确地进行存储和查找操作。

    在 Java 中，基于哈希表的数据结构如哈希集合（HashSet）、哈希映射（HashMap）等，通过计算对象的哈希码来确定对象在内部数据结构中的位置。
    * 如果两个对象根据 equals() 方法判断为相等，那么它们的哈希码应该相等。这是为了保持一致性，以便能够正确地查找和删除对象。

    当你重写 equals() 方法时，通常也需要同时重写 hashCode() 方法。
    *
    *
    * 这是因为在哈希表数据结构中，当你插入一个对象时，首先会计算该对象的哈希码，并根据哈希码决定插入的位置。
    * 然后，如果在该位置上已经存在其他对象，会使用 equals() 方法来判断是否是同一个对象或者相等的对象。
    *
    * 如果 hashCode() 方法没有被正确重写，就可能导致哈希表中相等的对象无法正确地被查找到。
    * 通过重写 hashCode() 方法，你可以根据对象的特定属性来计算哈希码，以保证相等的对象具有相等的哈希码。这样可以确保在使用哈希表数据结构时，对象能够被正确地存储和检索。
    * */
    

}
